definitions:
  controllers.AddAddressInput:
    properties:
      address:
        type: string
    required:
    - address
    type: object
  controllers.CreateCustomerInput:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  controllers.OrderInput:
    properties:
      customer_address_id:
        type: integer
      name:
        type: string
      payment_method_id:
        items:
          type: integer
        type: array
      product_id:
        items:
          type: integer
        type: array
    required:
    - customer_address_id
    - name
    - payment_method_id
    - product_id
    type: object
  controllers.PaymentMethodInput:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  controllers.ProductInput:
    properties:
      name:
        type: string
      price:
        type: number
    required:
    - name
    - price
    type: object
  models._Err:
    properties:
      error:
        type: string
    type: object
  models._Res:
    properties:
      message:
        type: string
    type: object
  models.Customer:
    properties:
      customer_name:
        type: string
      customerAddresses:
        items:
          $ref: '#/definitions/models.CustomerAddress'
        type: array
      id:
        type: integer
    type: object
  models.CustomerAddress:
    properties:
      address:
        type: string
      customer_id:
        type: integer
      id:
        type: integer
    type: object
  models.Order:
    properties:
      customer_address_id:
        type: integer
      customerAddress:
        $ref: '#/definitions/models.CustomerAddress'
      id:
        type: integer
      payment_methods:
        items:
          $ref: '#/definitions/models.PaymentMethod'
        type: array
      products:
        items:
          $ref: '#/definitions/models.Product'
        type: array
    type: object
  models.PaymentMethod:
    properties:
      id:
        type: integer
      is_active:
        type: boolean
      name:
        type: string
    type: object
  models.Product:
    properties:
      id:
        type: integer
      name:
        type: string
      price:
        type: number
    type: object
info:
  contact:
    email: asvelezer@gmail.com
    name: Arief Syaifuddin
    url: https://github.com/Velezer
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
paths:
  /customers:
    get:
      description: get customers
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models._Res'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Customer'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models._Err'
      summary: get customers
      tags:
      - Customer
    post:
      description: CreateCustomer.
      parameters:
      - description: the body to CreateCustomer
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateCustomerInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models._Res'
            - properties:
                data:
                  additionalProperties:
                    type: string
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models._Err'
      summary: CreateCustomer.
      tags:
      - Customer
  /customers/{id}:
    post:
      description: AddAddressCustomer.
      parameters:
      - description: the body to AddAddressCustomer
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.AddAddressInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models._Res'
            - properties:
                data:
                  additionalProperties:
                    type: string
                  type: object
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models._Err'
      summary: AddAddressCustomer.
      tags:
      - Customer
  /orders:
    get:
      description: get Orders
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models._Res'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Order'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models._Err'
      summary: get Orders
      tags:
      - Order
    post:
      description: create Order
      parameters:
      - description: the body to create a Order
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.OrderInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models._Res'
            - properties:
                data:
                  $ref: '#/definitions/models.Order'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models._Err'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models._Err'
      summary: Create Order
      tags:
      - Order
  /payment-methods:
    get:
      description: get PaymentMethods
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models._Res'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.PaymentMethod'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models._Err'
      summary: get PaymentMethods
      tags:
      - PaymentMethod
    post:
      description: create PaymentMethod
      parameters:
      - description: the body to create a PaymentMethod
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.PaymentMethodInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models._Res'
            - properties:
                data:
                  $ref: '#/definitions/models.PaymentMethod'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models._Err'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models._Err'
      summary: Create PaymentMethod
      tags:
      - PaymentMethod
  /products:
    get:
      description: get products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models._Res'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Product'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models._Err'
      summary: get products
      tags:
      - Product
    post:
      description: create product
      parameters:
      - description: the body to create a Product
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.ProductInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/models._Res'
            - properties:
                data:
                  $ref: '#/definitions/models.Product'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models._Err'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models._Err'
      summary: Create Product
      tags:
      - Product
swagger: "2.0"
